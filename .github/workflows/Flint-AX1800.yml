name: Flint-AX1800

on:
  workflow_dispatch:
    inputs:
      device:
        description: '选择设备'     
        required: true
        default: 'target_wlan_ap-gl-ax1800' 
        type: choice
        options:
        - target_wlan_ap-gl-ax1800
        - target_wlan_ap-gl-axt1800
        - target_wlan_ap-gl-ax1800-5-4
        - target_wlan_ap-gl-axt1800-5-4
        
      ui:
        description: '是否包含官方UI'
        required: true
        type: boolean
        
  # schedule:
    # - cron: 0 16 * * *
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml -y
        git config --global user.email "aa@163.com"
        git config --global user.name "aa"
    - name: make 
      run: |
        ./build.sh ~ target_wlan_ap-gl-ax1800 ${{ inputs.ui }}
        
    - name: Organize files
      id: organize
      if: true && !failure() && !cancelled()
      run: |
        cd ~/gl-infra-builder/wlan-ap/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && !failure()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
            
    - name: Generate release tag
      id: tag
      if: true && !failure() && !cancelled()
      run: |
        echo "::set-output name=release_tag::Flint-AX1800-$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "Flint AX(GL-AX1800)-4.4 Firmware" >> release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled() && !failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 7

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 1
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
